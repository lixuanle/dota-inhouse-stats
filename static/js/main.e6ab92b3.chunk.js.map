{"version":3,"sources":["util/legends.js","components/details/index.js","components/overview/index.js","pages/main-page/index.js","components/custom-tooltip/index.js","pages/user/index.js","util/parser.js","App.js","reportWebVitals.js","index.js"],"names":["heroLegend","pictureLegend","nameLegend","portraitLegend","MatchDetails","matchDetails","radiantTeam","filter","_","index","direTeam","MatchContainer","TeamHeader","style","padding","DetailText","map","username","hero","kills","deaths","assists","damage","RadiantTeamContainer","src","height","margin","alt","textAlign","fontSize","to","DireTeamContainer","styled","div","p","MatchOverview","useState","isOpen","setIsOpen","MatchOverviewContainer","InformationContainer","onClick","display","paddingLeft","HeroIcon","DownArrow","img","bronsonTicks","MainPage","initialData","matchHistory","setMatchHistory","individualStats","searchText","setSearchText","bronsonQuote","setBronsonQuote","history","useHistory","useEffect","Math","floor","random","length","MainPageHeader","MainContainer","MainPageSubheader","onSubmit","e","preventDefault","push","SearchBar","type","value","onChange","target","filteredResult","game","toLowerCase","indexOf","placeholder","h1","h2","input","CustomTooltip","active","payload","heroName","UserPage","id","useParams","sortedHeroData","setSortedHeroData","sortedPeerData","setSortedPeerData","sortCategory","setSortCategory","heroesPlayed","peers","heroData","peerData","peerName","sort","a","b","played","sortArray","category","array","newArray","aKillRate","aDeathsRate","aAssistsRate","bKillRate","bDeathsRate","bAssistsRate","wins","totalGames","losses","textDecoration","UserPageContainer","justifyContent","PlayerPortrait","UserStatistics","UserInfoText","toFixed","HeroStatistics","HeroHeader","flexDirection","killRate","deathsRate","assistsRate","HeroContainer","HeroText","BarChart","width","data","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","tick","YAxis","Tooltip","content","Legend","Bar","fill","PeerStatistics","PeerHeader","PeerInfoText","wonWith","lostWith","wonAgainst","lostAgainst","PeerContainer","PeerText","isNaN","h3","readCSV","fetch","response","text","readString","csvData","listOfGames","gameToAdd","playerStats","heroPicks","sideWins","radiant","dire","counter","slice","row","radiantPlayer","direPlayer","side","winner","parseInt","player","otherPlayer","otherUsername","otherSide","App","setInitialData","setIndividualStats","setHeroData","console","log","reverse","getCSV","basename","process","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gXAAaA,EAAa,CACxB,GAAM,qBACN,KAAQ,YACR,GAAM,YACN,IAAO,aACP,IAAO,MACP,IAAO,WACP,GAAM,cACN,MAAS,cACT,GAAM,gBACN,MAAS,cACT,KAAQ,aACR,QAAW,oBACX,MAAS,YACT,GAAM,iBACN,YAAe,cACf,UAAa,YACb,GAAM,gBACN,KAAQ,OACR,GAAM,gBACN,KAAQ,cACR,GAAM,YACN,MAAS,eACT,OAAU,SACV,GAAM,eACN,SAAY,gBACZ,KAAQ,aACR,KAAQ,aACR,SAAY,WACZ,OAAU,SACV,QAAW,UACX,GAAM,KACN,OAAU,SACV,KAAQ,aACR,IAAO,SACP,KAAQ,sBACR,GAAM,mBACN,KAAQ,UACR,KAAQ,OACR,KAAQ,OACR,KAAQ,OACR,KAAQ,OACR,OAAU,SACV,KAAQ,OACR,OAAU,SACV,OAAU,SACV,GAAM,cACN,MAAS,YACT,KAAQ,aACR,KAAQ,cACR,MAAS,YACT,GAAM,gBACN,IAAO,eACP,GAAM,oBACN,KAAQ,YACR,KAAQ,aACR,OAAU,SACV,GAAM,mBACN,MAAS,YACT,QAAW,UACX,GAAM,iBACN,KAAQ,OACR,MAAS,QACT,MAAS,QACT,IAAO,gBACP,MAAS,QACT,KAAQ,OACR,OAAU,SACV,GAAM,eACN,GAAM,eACN,OAAU,cACV,OAAU,gBACV,SAAY,WACZ,GAAM,YACN,IAAO,gBACP,QAAW,UACX,MAAS,QACT,KAAQ,WACR,OAAU,SACV,QAAW,UACX,MAAS,eACT,KAAQ,OACR,GAAM,mBACN,GAAM,cACN,KAAQ,aACR,OAAU,YACV,OAAU,SACV,KAAQ,OACR,MAAS,gBACT,KAAQ,OACR,UAAa,YACb,QAAW,UACX,KAAQ,OACR,MAAS,QACT,GAAM,cACN,QAAW,UACX,OAAU,SACV,GAAM,eACN,OAAU,cACV,GAAM,cACN,GAAM,aACN,GAAM,gBACN,KAAQ,QAGGC,EAAgB,CAC3B,GAAM,uFACN,KAAQ,8EACR,GAAM,6EACN,IAAO,+EACP,IAAO,wEACP,IAAO,6EACP,GAAM,gFACN,MAAS,gFACT,GAAM,kFACN,MAAS,gFACT,KAAQ,+EACR,QAAW,4EACX,MAAS,+EACT,GAAM,mFACN,YAAe,6FACf,UAAa,8EACb,GAAM,kFACN,KAAQ,iFACR,GAAM,kFACN,KAAQ,gFACR,GAAM,8EACN,MAAS,iFACT,OAAU,2EACV,GAAM,iFACN,SAAY,kFACZ,KAAQ,+EACR,KAAQ,+EACR,SAAY,6EACZ,OAAU,2EACV,QAAW,4EACX,GAAM,yEACN,OAAU,2EACV,KAAQ,+EACR,IAAO,2EACP,KAAQ,wFACR,GAAM,qFACN,KAAQ,4EACR,KAAQ,yEACR,KAAQ,yEACR,KAAQ,yEACR,KAAQ,yEACR,OAAU,8EACV,KAAQ,yEACR,OAAU,2EACV,OAAU,2EACV,GAAM,gFACN,MAAS,8EACT,KAAQ,+EACR,KAAQ,iFACR,MAAS,8EACT,GAAM,kFACN,IAAO,iFACP,GAAM,uFACN,KAAQ,8EACR,KAAQ,+EACR,OAAU,2EACV,GAAM,qFACN,MAAS,8EACT,QAAW,4EACX,GAAM,mFACN,KAAQ,yEACR,MAAS,0EACT,MAAS,0EACT,IAAO,gFACP,MAAS,0EACT,KAAQ,yEACR,OAAU,2EACV,GAAM,iFACN,GAAM,8EACN,OAAU,gFACV,OAAU,kFACV,SAAY,6EACZ,GAAM,8EACN,IAAO,kFACP,QAAW,4EACX,MAAS,0EACT,KAAQ,6EACR,OAAU,2EACV,QAAW,4EACX,MAAS,iFACT,KAAQ,yEACR,GAAM,qFACN,GAAM,gFACN,KAAQ,+EACR,OAAU,6EACV,OAAU,2EACV,KAAQ,yEACR,MAAS,kFACT,KAAQ,yEACR,UAAa,sFACb,QAAW,4EACX,KAAQ,yEACR,MAAS,0EACT,GAAM,gFACN,QAAW,4EACX,OAAU,2EACV,GAAM,iFACN,OAAU,gFACV,GAAM,kFACN,GAAM,+EACN,GAAM,kFACN,KAAQ,0EAGGC,EAAa,CACxB,IAAO,SAGIC,EAAiB,CAC5B,KAAQ,gCACR,OAAU,gCACV,OAAU,+BACV,QAAW,+BACX,MAAS,iCACT,SAAY,gCACZ,YAAa,iCACb,OAAU,iCACV,OAAU,iCACV,MAAS,gCACT,MAAS,+BACT,IAAO,kCACP,WAAc,kCACd,SAAY,kCACZ,MAAS,+B,OCtLIC,EA1CM,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAChBC,EAAcD,EAAaE,QAAO,SAACC,EAAGC,GAAJ,OAAcA,EAAQ,IAAM,KAC9DC,EAAWL,EAAaE,QAAO,SAACC,EAAGC,GAAJ,OAAcA,EAAQ,IAAM,KAEjE,OACE,eAACE,EAAD,WACE,eAACC,GAAD,CAAYC,MAAO,CAAEC,QAAS,UAA9B,UACE,cAACC,GAAD,mBACA,cAACA,GAAD,qBACA,cAACA,GAAD,oBACA,cAACA,GAAD,qBACA,cAACA,GAAD,sBACA,cAACA,GAAD,wBAPJ,OASGT,QATH,IASGA,OATH,EASGA,EAAaU,KAAI,gBAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,OAAQC,EAAlC,EAAkCA,QAASC,EAA3C,EAA2CA,OAA3C,OAChB,cAACC,GAAD,UACE,eAACX,GAAD,WACE,qBAAKY,IAAKvB,EAAciB,GAAOO,OAAQ,GAAIZ,MAAO,CAAEa,OAAQ,UAAWC,IAAG,UAAKzB,EAAWgB,GAAhB,WAC1E,cAAC,IAAD,CAAML,MAAO,CAAEe,UAAW,SAAUC,SAAU,SAAUH,OAAQ,UAAYI,GAAE,gBAAWb,GAAzF,SAAsGf,EAAWe,GAAYf,EAAWe,GAAYA,IACpJ,cAACF,GAAD,UAAaI,IACb,cAACJ,GAAD,UAAaK,IACb,cAACL,GAAD,UAAaM,IACb,cAACN,GAAD,UAAaO,QAPUA,MAV/B,OAqBGZ,QArBH,IAqBGA,OArBH,EAqBGA,EAAUM,KAAI,gBAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,OAAQC,EAAlC,EAAkCA,QAASC,EAA3C,EAA2CA,OAA3C,OACb,cAACS,GAAD,UACE,eAACnB,GAAD,WACE,qBAAKY,IAAKvB,EAAciB,GAAOO,OAAQ,GAAIZ,MAAO,CAAEa,OAAQ,UAAWC,IAAG,UAAKzB,EAAWgB,GAAhB,WAC1E,cAAC,IAAD,CAAML,MAAO,CAAEe,UAAW,SAAUC,SAAU,SAAUH,OAAQ,UAAYI,GAAE,gBAAWb,GAAzF,SAAsGA,IACtG,cAACF,GAAD,UAAaI,IACb,cAACJ,GAAD,UAAaK,IACb,cAACL,GAAD,UAAaM,IACb,cAACN,GAAD,UAAaO,QAPOA,UAiB1BX,EAAiBqB,IAAOC,IAAV,wDAIdV,GAAuBS,IAAOC,IAAV,qEAIpBrB,GAAaoB,IAAOC,IAAV,iGAKVF,GAAoBC,IAAOC,IAAV,wEAIjBlB,GAAaiB,IAAOE,EAAV,4FCzBDC,GAnCO,SAAC,GAAsB,IAApB9B,EAAmB,EAAnBA,aAAmB,EAEd+B,oBAAS,GAFK,mBAEnCC,EAFmC,KAE3BC,EAF2B,KAIpChC,EAAcD,EAAaE,QAAO,SAACC,EAAGC,GAAJ,OAAcA,EAAQ,IAAM,KAC9DC,EAAWL,EAAaE,QAAO,SAACC,EAAGC,GAAJ,OAAcA,EAAQ,IAAM,KAEjE,OACE,eAAC8B,GAAD,WACE,eAACC,GAAD,CAAsBC,QAAS,kBAAMH,GAAWD,IAAhD,UACE,qBAAKxB,MAAO,CAAEa,OAAQ,SAAUgB,QAAS,OAAQC,YAAa,QAA9D,SACGrC,EAAYU,KAAI,gBAAGE,EAAH,EAAGA,KAAH,OACf,8BACE,cAAC0B,GAAD,CAAUpB,IAAG,UAAKvB,EAAciB,IAASS,IAAG,UAAKT,EAAL,YADpCA,QAKd,qBAAKL,MAAO,CAAEa,OAAQ,SAAUgB,QAAS,QAAzC,SACGhC,EAASM,KAAI,gBAAGE,EAAH,EAAGA,KAAH,OACZ,8BACE,cAAC0B,GAAD,CAAUpB,IAAG,UAAKvB,EAAciB,IAASS,IAAG,UAAKT,EAAL,YADpCA,QAKd,cAAC2B,GAAD,CAAWrB,IAAI,qCAAqCa,OAAQA,OAE7DA,GACC,cAAC,EAAD,CACEhC,aAAcA,QASlBkC,GAAyBP,IAAOC,IAAV,+CAItBO,GAAuBR,IAAOC,IAAV,4MAYpBW,GAAWZ,IAAOc,IAAV,6CAIRD,GAAYb,IAAOc,IAAV,+EAGA,qBAAGT,OAAsB,iBAAmB,MC5DrDU,GAAe,CACnB,cACA,aACA,gBACA,cACA,eACA,aACA,cACA,aACA,YACA,eACA,0BACA,oBACA,iDACA,qDACA,sBA6DaC,GA1DE,SAAC,GAAqE,IAAnEC,EAAkE,EAAlEA,YAAaC,EAAqD,EAArDA,aAAcC,EAAuC,EAAvCA,gBAAiBC,EAAsB,EAAtBA,gBAAsB,EAC9ChB,mBAAS,IADqC,mBAC5EiB,EAD4E,KAChEC,EADgE,OAE1ClB,mBAAS,IAFiC,mBAE5EmB,EAF4E,KAE9DC,EAF8D,KAIhFC,EAAUC,cAEdC,qBAAU,WACRH,EAAgBT,GAAaa,KAAKC,MAAMD,KAAKE,SAAWf,GAAagB,OAAS,OAC7E,CAACZ,IAEJQ,qBAAU,WACRR,EAAgBF,KACf,CAACA,EAAaE,IA0BjB,OACE,qCACE,cAACa,GAAD,wCACA,eAACC,GAAD,WACE,eAACC,GAAD,kCAAyBX,KACzB,sBAAMY,SAZS,SAAAC,GACnBA,EAAEC,iBACEjB,EAAgBC,IAClBI,EAAQa,KAAR,gBAAsBjB,KASpB,SACE,cAACkB,GAAD,CAAWC,KAAK,OAAOC,MAAOpB,EAAYqB,SA9B7B,SAAAN,GACnBd,EAAcc,EAAEO,OAAOF,OACvB,IAAIG,EAAiB,GACrB,GAAIvB,EAAWU,OAAS,EAAG,CAAC,IAAD,gBACNd,GADM,IACzB,2BAAgC,CAAC,IAAD,EAArB4B,EAAqB,sBACXA,GADW,IAC9B,2BAAyB,SACf,SAAaC,cAAcC,QAAQ1B,EAAWyB,gBAAkB,GACtEF,EAAeN,KAAKO,IAHM,gCADP,8BAQzB1B,EAAgByB,QAEhBzB,EAAgBF,IAiBsD+B,YAAY,uBAHlF,OAKG9B,QALH,IAKGA,OALH,EAKGA,EAAclC,KAAI,SAAC6D,EAAMpE,GAAP,OACjB,cAAC,GAAD,CACEJ,aAAcwE,EACdpE,MAAOA,GACFA,aAUXuD,GAAiBhC,IAAOiD,GAAV,oHAOdf,GAAoBlC,IAAOkD,GAAV,yHAOjBX,GAAYvC,IAAOmD,MAAV,uWAWTlB,GAAgBjC,IAAOC,IAAV,0F,8EC5FJmD,GAbO,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/B,GAAID,GAAUC,GAAWA,EAAQvB,OAAQ,CAAC,IACrBwB,EAAeD,EAAQ,GAAlCA,QAAWC,SACnB,OACE,gCACE,4BAAIvF,EAAWuF,KACf,cAAC,GAAD,CAAU/D,IAAG,UAAKvB,EAAcsF,IAAa5D,IAAG,UAAK4D,EAAL,cAItD,OAAO,MAKH3C,GAAWZ,IAAOc,IAAV,6CC2MC0C,GAtNE,SAAC,GAAyB,IAAvBpC,EAAsB,EAAtBA,gBACVqC,EAAOC,cAAPD,GADgC,EAEIrD,qBAFJ,mBAEjCuD,EAFiC,KAEjBC,EAFiB,OAGIxD,qBAHJ,mBAGjCyD,EAHiC,KAGjBC,EAHiB,OAIA1D,mBAAS,IAJT,mBAIjC2D,EAJiC,KAInBC,EAJmB,KAMxCrC,qBAAU,WACR,GAAIP,EAAiB,CAAC,IAAD,EACaA,EAAgBqC,GAAxCQ,EADW,EACXA,aAAcC,EADH,EACGA,MAChBC,EAAW,GACXC,EAAW,GAEjB,IAAK,IAAMb,KAAYU,EACrBE,EAAS7B,KAAT,cACAiB,SAAUA,GACLU,EAAaV,KAapB,IAAK,IAAMc,KATXF,EAASG,MAAK,SAACC,EAAEC,GACf,OAAIxG,EAAWuG,EAAEhB,UAAYvF,EAAWwG,EAAEjB,WAChC,EACCvF,EAAWuG,EAAEhB,UAAYvF,EAAWwG,EAAEjB,UACxC,EAEF,KAGcW,EACrBE,EAAS9B,KAAT,cACE+B,SAAUA,EAASvB,eAChBoB,EAAMG,EAASvB,iBAGtBsB,EAASE,MAAK,SAACC,EAAEC,GACf,OAAID,EAAEE,OAASD,EAAEC,QACP,EACCF,EAAEE,OAASD,EAAEC,OACf,EAEF,KAITb,EAAkBO,GAClBL,EAAkBM,MAEnB,CAACX,EAAIrC,IAER,IAAMsD,EAAY,SAACC,EAAUC,GAC3B,IAAMC,EAAsB,SAAVD,EAAD,YAAyBjB,GAAzB,YAA+CE,GAE/C,gBAAbc,EACFE,EAASP,MAAK,SAACC,EAAEC,GACf,OAAID,EAAEE,OAASD,EAAEC,OACRV,IAAiBY,GAAY,EAAI,EAC/BJ,EAAEE,OAASD,EAAEC,OACfV,IAAiBY,EAAW,GAAK,EAEnC,KAEa,QAAbA,EACTE,EAASP,MAAK,SAACC,EAAEC,GACf,IAAMM,EAAaP,EAAEpF,MAAMoF,EAAEE,OACvBM,EAAeR,EAAEnF,OAAOmF,EAAEE,OAC1BO,EAAgBT,EAAElF,QAAQkF,EAAEE,OAC5BQ,EAAaT,EAAErF,MAAMqF,EAAEC,OACvBS,EAAeV,EAAEpF,OAAOoF,EAAEC,OAC1BU,EAAgBX,EAAEnF,QAAQmF,EAAEC,OAClC,OAAKK,EAAUE,GAAcD,GAAeE,EAAUE,GAAcD,EAC3DnB,IAAiBY,GAAY,EAAI,GAC9BG,EAAUE,GAAcD,GAAeE,EAAUE,GAAcD,EAClEnB,IAAiBY,EAAW,GAAK,EAEnC,KAGTE,EAASP,MAAK,SAACC,EAAEC,GACf,OAAID,EAAEI,GAAUJ,EAAEE,OAASD,EAAEG,GAAUH,EAAEC,OAChCV,IAAiBY,GAAY,EAAI,EAC/BJ,EAAEI,GAAUJ,EAAEE,OAASD,EAAEG,GAAUH,EAAEC,OACvCV,IAAiBY,EAAW,GAAK,EAEnC,KAGG,SAAVC,EACFhB,EAAkBiB,GAElBf,EAAkBe,GAEpBb,EAAgBW,IAGlB,GAAIvD,EAAiB,CAAC,IAAD,EACsCA,EAAgBqC,GAAjEtE,EADW,EACXA,MAAOE,EADI,EACJA,QAASD,EADL,EACKA,OAAQE,EADb,EACaA,OAAQ8F,EADrB,EACqBA,KAClCC,EAAaD,EAFA,EAC2BE,OAG9C,OACE,qCACE,cAAC,IAAD,CAAMxF,GAAG,IAAIjB,MAAO,CAAE0G,eAAgB,QAAtC,SACE,cAAC,GAAD,0CAEA,eAACC,GAAD,WACA,eAAC,GAAD,8BAAqCtH,EAAWuF,GAAMvF,EAAWuF,GAAMA,KACvE,qBAAK5E,MAAO,CAAE6B,QAAS,OAAQ+E,eAAgB,UAA/C,SACE,cAACC,GAAD,CAAgBlG,IAAKrB,EAAesF,OAEtC,eAACkC,GAAD,WACE,gCACE,cAACC,GAAD,sBACA,eAACA,GAAD,YAAiBR,EAAKC,EAAY,KAAKQ,QAAQ,GAA/C,UAEF,gCACE,cAACD,GAAD,2BACA,cAACA,GAAD,UAAeP,OAEjB,gCACE,cAACO,GAAD,oBACA,cAACA,GAAD,WAAgBzG,EAAMkG,GAAYQ,QAAQ,QAE5C,gCACE,cAACD,GAAD,qBACA,cAACA,GAAD,WAAgBxG,EAAOiG,GAAYQ,QAAQ,QAE7C,gCACE,cAACD,GAAD,sBACA,cAACA,GAAD,WAAgBvG,EAAQgG,GAAYQ,QAAQ,QAE9C,gCACE,cAACD,GAAD,qBACA,cAACA,GAAD,UAAehE,KAAKC,MAAMvC,EAAO+F,WAGrC,eAACS,GAAD,WACE,iDACA,eAACC,GAAD,WACE,cAACH,GAAD,CAAcnF,QAAS,kBAAMiE,EAAU,cAAe,SAAtD,0BACA,cAACkB,GAAD,CAAcnF,QAAS,kBAAMiE,EAAU,OAAQ,SAA/C,qBACA,cAACkB,GAAD,CAAcnF,QAAS,kBAAMiE,EAAU,QAAS,SAAhD,2BACA,cAACkB,GAAD,CAAcnF,QAAS,kBAAMiE,EAAU,SAAU,SAAjD,4BACA,cAACkB,GAAD,CAAcnF,QAAS,kBAAMiE,EAAU,UAAW,SAAlD,6BACA,cAACkB,GAAD,CAAcnF,QAAS,kBAAMiE,EAAU,MAAO,SAA9C,oBAEF,qBAAK7F,MAAO,CAAE6B,QAAS,OAAQsF,cAAe,UAA9C,gBACGrC,QADH,IACGA,OADH,EACGA,EAAgB3E,KAAI,YAAiE,IAA9DuE,EAA6D,EAA7DA,SAAUkB,EAAmD,EAAnDA,OAAQW,EAA2C,EAA3CA,KAClCa,GAD6E,EAArCX,OAAqC,EAA7BnG,MAC9BsF,GAClByB,EAF6E,EAAtB9G,OAElCqF,EACrB0B,EAH6E,EAAd9G,QAGxCoF,EAC7B,OACE,eAAC2B,GAAD,WACE,sBAAKvH,MAAO,CAAE6B,QAAS,QAAvB,UACE,cAAC,GAAD,CAAUlB,IAAG,UAAKvB,EAAcsF,IAAa5D,IAAG,UAAK4D,EAAL,WAChD,cAAC8C,GAAD,UAAWrI,EAAWuF,QAExB,cAAC8C,GAAD,UAAW5B,IACX,eAAC4B,GAAD,YAAajB,EAAKX,EAAQ,KAAKoB,QAAQ,GAAvC,OACA,cAACQ,GAAD,UAAWJ,EAASJ,QAAQ,KAC5B,cAACQ,GAAD,UAAWH,EAAWL,QAAQ,KAC9B,cAACQ,GAAD,UAAWF,EAAYN,QAAQ,KAC/B,cAACQ,GAAD,YAAaJ,EAAWE,GAAaD,GAAYL,QAAQ,OAVvCtC,QAe1B,eAAC+C,GAAA,EAAD,CACEC,MAAO,IACP9G,OAAQ,IACR+G,KAAM7C,EACNjE,OAAQ,CACN+G,IAAK,GACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,GARZ,UAWE,cAACC,GAAA,EAAD,CAAeC,gBAAgB,QAC/B,cAACC,GAAA,EAAD,CAAOC,QAAQ,WAAWC,MAAM,IAChC,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,CAASC,QAAS,cAAC,GAAD,MAClB,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,CAAKN,QAAQ,OAAOO,KAAK,YACzB,cAACD,GAAA,EAAD,CAAKN,QAAQ,SAASO,KAAK,kBAI/B,eAACC,GAAD,WACE,iDACA,eAACC,GAAD,WACE,cAACC,GAAD,CAAcjH,QAAS,kBAAMiE,EAAU,cAAe,UAAtD,0BACA,cAACgD,GAAD,CAAcjH,QAAS,kBAAMiE,EAAU,OAAQ,UAA/C,sBACA,cAACgD,GAAD,CAAcjH,QAAS,kBAAMiE,EAAU,QAAS,UAAhD,uBACA,cAACgD,GAAD,CAAcjH,QAAS,kBAAMiE,EAAU,SAAU,UAAjD,yBACA,cAACgD,GAAD,CAAcjH,QAAS,kBAAMiE,EAAU,UAAW,UAAlD,6BAPJ,OASGb,QATH,IASGA,OATH,EASGA,EAAgB7E,KAAI,WAAmEP,GAAW,IAA3E4F,EAA0E,EAA1EA,SAAUI,EAAgE,EAAhEA,OAAQkD,EAAwD,EAAxDA,QAASC,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,WAAYC,EAAyB,EAAzBA,YACvE,OACE,eAACC,GAAD,WACE,cAAC,IAAD,CAAMjI,GAAE,gBAAWuE,GAAnB,SAAgCA,IAChC,cAAC2D,GAAD,UAAWvD,IACX,eAACuD,GAAD,WAAWL,EAAX,IAAsBM,MAAMN,GAASA,EAAUC,IAA+D,GAAjDD,GAASA,EAAUC,GAAY,KAAK/B,QAAQ,GAAzG,QACA,eAACmC,GAAD,WAAWJ,EAAX,IAAuBK,MAAML,GAAUD,EAAUC,IAAgE,GAAlDA,GAAUD,EAAUC,GAAY,KAAK/B,QAAQ,GAA5G,QACA,eAACmC,GAAD,WAAWH,EAAX,IAAyBI,MAAMJ,GAAYA,EAAaC,IAA0E,GAA1DD,GAAYA,EAAaC,GAAe,KAAKjC,QAAQ,GAA7H,QACA,eAACmC,GAAD,WAAWF,EAAX,IAA0BG,MAAMH,GAAaD,EAAaC,IAA4E,GAA3DA,GAAaD,EAAaC,GAAe,KAAKjC,QAAQ,GAAjI,uBAQd,OAAO,MAKL7D,GAAiBhC,IAAOiD,GAAV,oHAOduC,GAAoBxF,IAAOC,IAAV,0FAMjBiC,GAAoBlC,IAAOkD,GAAV,mGAMjBwC,GAAiB1F,IAAOc,IAAV,2CAId6E,GAAiB3F,IAAOC,IAAV,sIAOd6F,GAAiB9F,IAAOC,IAAV,kMAWduH,GAAiBxH,IAAOC,IAAV,0KAUd8F,GAAa/F,IAAOC,IAAV,4OAYVmG,GAAgBpG,IAAOC,IAAV,uIAOboG,GAAWrG,IAAOE,EAAV,kIAQR0F,GAAe5F,IAAOE,EAAV,mDAIZU,GAAWZ,IAAOc,IAAV,6CAIRiH,GAAgB/H,IAAOC,IAAV,mIAObwH,GAAazH,IAAOC,IAAV,yOAYVyH,GAAe1H,IAAOkI,GAAV,mDAIZF,GAAWhI,IAAOE,EAAV,kI,UCjGCiI,GAzOF,uCAAG,oFAAA5D,EAAA,sEACS6D,MAAM,iGADf,cACRC,EADQ,gBAEKA,EAASC,OAFd,UAER9B,EAFQ,SAGY+B,aAAW/B,MAAvBgC,EAHA,EAGNhC,MACIzE,OAAS,GAJP,iBAMR0G,EAAc,GACdC,EAAY,GACZC,EAAc,GACdC,EAAY,GACZC,EAAW,CAAEC,QAAS,EAAGC,KAAM,GAC/BC,EAAU,EAXF,cAaMR,EAAQS,MAAM,IAbpB,IAaZ,2BAEiB,cAFNC,EAAyB,SAE1B,IAGAC,EAAgBD,EAAI,GAAGpG,cACvBsG,EAAaF,EAAI,GAAGpG,cAG1B4F,EAAUpG,KAAK,CACbrD,SAAUkK,EACVE,KAAM,UACNlK,MAAO+J,EAAI,GACX9J,OAAQ8J,EAAI,GACZ7J,QAAS6J,EAAI,GACbhK,KAAMgK,EAAI,GACV5J,OAAQ4J,EAAI,GACZI,OAAQJ,EAAI,IAAIpG,gBAAkBqG,IAGpCT,EAAUpG,KAAK,CACbrD,SAAUmK,EACVC,KAAM,OACNlK,MAAO+J,EAAI,GACX9J,OAAQ8J,EAAI,GACZ7J,QAAS6J,EAAI,IACbhK,KAAMgK,EAAI,IACV5J,OAAQ4J,EAAI,IACZI,OAAQJ,EAAI,IAAIpG,gBAAkBsG,IAGpB,IAAZJ,IAEJP,EAAYnG,KAAKoG,GACjBA,EAAY,GACVM,GAAW,GAGbA,GAAS,EAGJL,EAAYQ,KACfR,EAAYQ,GAAiB,CAC3BlF,aAAc,GACdC,MAAO,GACP/E,MAAO,EACPC,OAAQ,EACRC,QAAS,EACTC,OAAQ,EACR8F,KAAM,EACNE,OAAQ,IAKPqD,EAAYS,KACfT,EAAYS,GAAc,CACxBnF,aAAc,GACdC,MAAO,GACP/E,MAAO,EACPC,OAAQ,EACRC,QAAS,EACTC,OAAQ,EACR8F,KAAM,EACNE,OAAQ,IAQPqD,EAAYQ,GAAelF,aAAaiF,EAAI,IAU/CP,EAAYQ,GAAelF,aAAaiF,EAAI,IAA5C,QAA6D,EAT7DP,EAAYQ,GAAelF,aAAaiF,EAAI,IAAM,CAChDzE,OAAQ,EACRW,KAAM,EACNE,OAAQ,EACRnG,MAAO,EACPC,OAAQ,EACRC,QAAS,GAMbsJ,EAAYQ,GAAelF,aAAaiF,EAAI,IAA5C,OAA4DK,SAASL,EAAI,IACzEP,EAAYQ,GAAelF,aAAaiF,EAAI,IAA5C,QAA6DK,SAASL,EAAI,IAC1EP,EAAYQ,GAAelF,aAAaiF,EAAI,IAA5C,SAA8DK,SAASL,EAAI,IAEvEA,EAAI,IAAIpG,gBAAkBqG,EAC5BR,EAAYQ,GAAelF,aAAaiF,EAAI,IAA5C,MAA2D,EAE3DP,EAAYQ,GAAelF,aAAaiF,EAAI,IAA5C,QAA6D,EAK1DP,EAAYS,GAAYnF,aAAaiF,EAAI,KAU5CP,EAAYS,GAAYnF,aAAaiF,EAAI,KAAzC,QAA2D,EAT3DP,EAAYS,GAAYnF,aAAaiF,EAAI,KAAO,CAC9CzE,OAAQ,EACRW,KAAM,EACNE,OAAQ,EACRnG,MAAO,EACPC,OAAQ,EACRC,QAAS,GAMbsJ,EAAYS,GAAYnF,aAAaiF,EAAI,KAAzC,OAA0DK,SAASL,EAAI,IACvEP,EAAYS,GAAYnF,aAAaiF,EAAI,KAAzC,QAA2DK,SAASL,EAAI,IACxEP,EAAYS,GAAYnF,aAAaiF,EAAI,KAAzC,SAA4DK,SAASL,EAAI,KAErEA,EAAI,IAAIpG,gBAAkBsG,EAC5BT,EAAYS,GAAYnF,aAAaiF,EAAI,KAAzC,MAAyD,EAEzDP,EAAYS,GAAYnF,aAAaiF,EAAI,KAAzC,QAA2D,EAOxDN,EAAU5K,EAAWkL,EAAI,KAO5BN,EAAU5K,EAAWkL,EAAI,KAAzB,QAA2C,EAN3CN,EAAU5K,EAAWkL,EAAI,KAAO,CAC9BzE,OAAQ,EACRW,KAAM,EACNE,OAAQ,GAMR4D,EAAI,IAAIpG,gBAAkBqG,EAC5BP,EAAU5K,EAAWkL,EAAI,KAAzB,MAAyC,EAEzCN,EAAU5K,EAAWkL,EAAI,KAAzB,QAA2C,EAIxCN,EAAU5K,EAAWkL,EAAI,MAO5BN,EAAU5K,EAAWkL,EAAI,MAAzB,QAA4C,EAN5CN,EAAU5K,EAAWkL,EAAI,MAAQ,CAC/BzE,OAAQ,EACRW,KAAM,EACNE,OAAQ,GAMR4D,EAAI,IAAIpG,gBAAkBsG,EAC5BR,EAAU5K,EAAWkL,EAAI,MAAzB,MAA0C,EAE1CN,EAAU5K,EAAWkL,EAAI,MAAzB,QAA4C,EAI9CP,EAAYQ,GAAehK,OAASoK,SAASL,EAAI,IACjDP,EAAYQ,GAAe/J,QAAUmK,SAASL,EAAI,IAClDP,EAAYQ,GAAe9J,SAAWkK,SAASL,EAAI,IACnDP,EAAYQ,GAAe7J,QAAUiK,SAASL,EAAI,IAClDP,EAAYQ,GAAe/D,MAAS8D,EAAI,IAAIpG,gBAAkBqG,EAAgB,EAAI,EAClFR,EAAYQ,GAAe7D,QAAW4D,EAAI,IAAIpG,gBAAkBqG,EAAgB,EAAI,EAEpFR,EAAYS,GAAYjK,OAASoK,SAASL,EAAI,IAC9CP,EAAYS,GAAYhK,QAAUmK,SAASL,EAAI,IAC/CP,EAAYS,GAAY/J,SAAWkK,SAASL,EAAI,KAChDP,EAAYS,GAAY9J,QAAUiK,SAASL,EAAI,KAC/CP,EAAYS,GAAYhE,MAAS8D,EAAI,IAAIpG,gBAAkBsG,EAAa,EAAI,EAC5ET,EAAYS,GAAY9D,QAAW4D,EAAI,IAAIpG,gBAAkBsG,EAAa,EAAI,GAI/D,SAAXF,EAAI,GACNL,EAASE,MAAQ,EAEjBF,EAASC,SAAW,EA9Ld,8BAqMZ,UAAmBL,EAAnB,eAAgC,CAArB5F,EAAqB,mBAETA,GAFS,IAE9B,2BAA2B,CAAhB2G,EAAgB,QACjBvK,EAA2BuK,EAA3BvK,SAAUoK,EAAiBG,EAAjBH,KAAMC,EAAWE,EAAXF,OADC,cAECzG,GAFD,IAEzB,2BAAW4G,EAAqB,QACZC,EAAmCD,EAA7CxK,SAA+B0K,EAAcF,EAApBJ,KAC7BpK,IAAayK,IACVf,EAAY1J,GAAUiF,MAAMwF,GAS/Bf,EAAY1J,GAAUiF,MAAMwF,GAAejF,QAAU,EARrDkE,EAAY1J,GAAUiF,MAAMwF,GAAiB,CAC3CjF,OAAQ,EACRkD,QAAS,EACTC,SAAU,EACVC,WAAY,EACZC,YAAa,GAKbuB,IAASM,GAAaL,EACxBX,EAAY1J,GAAUiF,MAAMwF,GAAe/B,SAAW,EAC7C0B,IAASM,GAAcL,EAEvBD,IAASM,GAAaL,EAC/BX,EAAY1J,GAAUiF,MAAMwF,GAAe7B,YAAc,EAEzDc,EAAY1J,GAAUiF,MAAMwF,GAAe5B,aAAe,EAJ1Da,EAAY1J,GAAUiF,MAAMwF,GAAe9B,UAAY,GAnBpC,gCAFG,+BArMpB,yBAqOL,CAAEa,cAAaE,cAAaC,YAAWC,aArOlC,4CAAH,qDCmDEe,GA3CH,WAAO,IAAD,EAEwBxJ,mBAAS,IAFjC,mBAERa,EAFQ,KAEK4I,EAFL,OAG0BzJ,mBAAS,IAHnC,mBAGRc,EAHQ,KAGMC,EAHN,OAIgCf,qBAJhC,mBAIRgB,EAJQ,KAIS0I,EAJT,OAKU1J,qBAAhB2J,EALM,oBAqBhB,OAbApI,qBAAU,YACI,uCAAG,kCAAA4C,EAAA,sEACyC4D,KADzC,gBACLM,EADK,EACLA,YAAaE,EADR,EACQA,YAAaC,EADrB,EACqBA,UAClCoB,QAAQC,IAAIxB,GACZtH,EAAgB,YAAIsH,GAAayB,WACjCL,EAAe,YAAIpB,GAAayB,WAChCJ,EAAmBnB,GACnBoB,EAAYnB,GANC,4CAAH,qDASZuB,KACC,IAGD,cAAC,IAAD,CAAQC,SAAUC,sBAAlB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,GAAD,CACErJ,aAAcA,EACdD,YAAaA,EACbE,gBAAiBA,EACjBC,gBAAiBA,MAGrB,cAAC,IAAD,CAAOkJ,OAAK,EAACC,KAAI,YAAjB,SACE,cAAC,GAAD,CACEnJ,gBAAiBA,EACjBH,YAAaA,YClCVuJ,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.e6ab92b3.chunk.js","sourcesContent":["export const heroLegend = {\n  'aa': \"Ancient Apparition\",\n  'alch': \"Alchemist\",\n  'am': \"Anti-Mage\",\n  'arc': \"Arc Warden\",\n  'axe': \"Axe\",\n  'bat': \"Batrider\",\n  'bb': \"Bristleback\",\n  'beast': \"Beastmaster\",\n  'bh': \"Bounty Hunter\",\n  'blood': \"Bloodseeker\",\n  'brew': \"Brewmaster\",\n  'centaur': \"Centaur Warrunner\",\n  'clock': \"Clockwerk\",\n  'cm': \"Crystal Maiden\",\n  'dawnbreaker': \"Dawnbreaker\",\n  'disruptor': \"Disruptor\",\n  'dk': \"Dragon Knight\",\n  'doom': \"Doom\",\n  'dp': \"Death Prophet\",\n  'drow': \"Drow Ranger\",\n  'ds': \"Dark Seer\",\n  'ember': \"Ember Spirit\",\n  'enigma': \"Enigma\",\n  'es': \"Earth Spirit\",\n  'faceless': \"Faceless Void\",\n  'grim': \"Grimstroke\",\n  'gyro': \"Gyrocopter\",\n  'hoodwink': \"Hoodwink\",\n  'huskar': \"Huskar\",\n  'invoker': \"Invoker\",\n  'io': \"Io\",\n  'jakiro': \"Jakiro\",\n  'jugg': \"Juggernaut\",\n  'kka': \"Kunkka\",\n  'kotl': \"Keeper of the Light\",\n  'lc': \"Legion Commander\",\n  'lesh': \"Leshrac\",\n  'lich': \"Lich\",\n  'lina': \"Lina\",\n  'lion': \"Lion\",\n  'luna': \"Luna\",\n  'magnus': \"Magnus\",\n  'mars': \"Mars\",\n  'medusa': \"Medusa\",\n  'mirana': \"Mirana\",\n  'mk': \"Monkey King\",\n  'morph': \"Morphling\",\n  'naga': \"Naga Siren\",\n  'naix': \"Lifestealer\",\n  'necro': \"Necrophos\",\n  'ns': \"Night Stalker\",\n  'nyx': \"Nyx Assassin\",\n  'od': \"Outworld Devourer\",\n  \"ogre\": \"Ogre Magi\",\n  'omni': \"Omniknight\",\n  \"oracle\": \"Oracle\",\n  'pa': \"Phantom Assassin\",\n  'pango': \"Pangolier\",\n  'phoenix': \"Phoenix\",\n  'pl': \"Phantom Lancer\",\n  'puck': \"Puck\",\n  'pudge': \"Pudge\",\n  'pugna': \"Pugna\",\n  'qop': \"Queen of Pain\",\n  'razor': \"Razor\",\n  'riki': \"Riki\",\n  'rubick': \"Rubick\",\n  'sd': \"Shadow Demon\",\n  'sf': \"Shadow Fiend\",\n  'shaker': \"Earthshaker\",\n  'shaman': \"Shadow Shaman\",\n  'silencer': \"Silencer\",\n  'sk': \"Sand King\",\n  'sky': \"Skywrath Mage\",\n  'slardar': \"Slardar\",\n  'slark': \"Slark\",\n  'snap': \"Snapfire\",\n  'sniper': \"Sniper\",\n  'spectre': \"Spectre\",\n  'storm': \"Storm Spirit\",\n  'sven': \"Sven\",\n  'ta': \"Templar Assassin\",\n  'tb': \"Terrorblade\",\n  'tide': \"Tidehunter\",\n  'timber': \"Timbersaw\",\n  'tinker': \"Tinker\",\n  'tiny': \"Tiny\",\n  'troll': \"Troll Warlord\",\n  'tusk': \"Tusk\",\n  'underlord': \"Underlord\",\n  'undying': \"Undying\",\n  'ursa': \"Ursa\",\n  'viper': \"Viper\",\n  'vs': \"Void Spirit\",\n  'warlock': \"Warlock\",\n  'weaver': \"Weaver\",\n  'wd': \"Witch Doctor\",\n  'willow': \"Dark Willow\",\n  'wk': \"Wraith King\",\n  'wr': \"Windranger\",\n  'ww': \"Winter Wyvern\",\n  'zeus': \"Zeus\",\n}\n\nexport const pictureLegend = {\n  'aa': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/ancient_apparition_full.png\",\n  'alch': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/alchemist_full.png\",\n  'am': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/antimage_full.png\",\n  'arc': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/arc_warden_full.png\",\n  'axe': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/axe_full.png\",\n  'bat': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/batrider_full.png\",\n  'bb': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/bristleback_full.png\",\n  'beast': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/beastmaster_full.png\",\n  'bh': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/bounty_hunter_full.png\",\n  'blood': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/bloodseeker_full.png\",\n  'brew': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/brewmaster_full.png\",\n  'centaur': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/centaur_full.png\",\n  'clock': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/rattletrap_full.png\",\n  'cm': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/crystal_maiden_full.png\",\n  'dawnbreaker': \"https://cdn.cloudflare.steamstatic.com/apps/dota2/images/dota_react/heroes/dawnbreaker.png\",\n  'disruptor': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/disruptor_full.png\",\n  'dk': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/dragon_knight_full.png\",\n  'doom': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/doom_bringer_full.png\",\n  'dp': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/death_prophet_full.png\",\n  'drow': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/drow_ranger_full.png\",\n  'ds': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/dark_seer_full.png\",\n  'ember': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/ember_spirit_full.png\",\n  'enigma': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/enigma_full.png\",\n  'es': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/earth_spirit_full.png\",\n  'faceless': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/faceless_void_full.png\",\n  'grim': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/grimstroke_full.png\",\n  'gyro': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/gyrocopter_full.png\",\n  'hoodwink': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/hoodwink_full.png\",\n  'huskar': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/huskar_full.png\",\n  'invoker': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/invoker_full.png\",\n  'io': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/wisp_full.png\",\n  'jakiro': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/jakiro_full.png\",\n  'jugg': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/juggernaut_full.png\",\n  'kka': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/kunkka_full.png\",\n  'kotl': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/keeper_of_the_light_full.png\",\n  'lc': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/legion_commander_full.png\",\n  'lesh': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/leshrac_full.png\",\n  'lich': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/lich_full.png\",\n  'lina': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/lina_full.png\",\n  'lion': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/lion_full.png\",\n  'luna': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/luna_full.png\",\n  'magnus': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/magnataur_full.png\",\n  'mars': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/mars_full.png\",\n  'medusa': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/medusa_full.png\",\n  'mirana': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/mirana_full.png\",\n  'mk': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/monkey_king_full.png\",\n  'morph': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/morphling_full.png\",\n  'naga': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/naga_siren_full.png\",\n  'naix': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/life_stealer_full.png\",\n  'necro': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/necrolyte_full.png\",\n  'ns': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/night_stalker_full.png\",\n  'nyx': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/nyx_assassin_full.png\",\n  'od': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/obsidian_destroyer_full.png\",\n  \"ogre\": \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/ogre_magi_full.png\",\n  'omni': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/omniknight_full.png\",\n  \"oracle\": \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/oracle_full.png\",\n  'pa': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/phantom_assassin_full.png\",\n  'pango': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/pangolier_full.png\",\n  'phoenix': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/phoenix_full.png\",\n  'pl': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/phantom_lancer_full.png\",\n  'puck': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/puck_full.png\",\n  'pudge': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/pudge_full.png\",\n  'pugna': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/pugna_full.png\",\n  'qop': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/queenofpain_full.png\",\n  'razor': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/razor_full.png\",\n  'riki': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/riki_full.png\",\n  'rubick': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/rubick_full.png\",\n  'sd': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/shadow_demon_full.png\",\n  'sf': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/nevermore_full.png\",\n  'shaker': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/earthshaker_full.png\",\n  'shaman': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/shadow_shaman_full.png\",\n  'silencer': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/silencer_full.png\",\n  'sk': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/sand_king_full.png\",\n  'sky': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/skywrath_mage_full.png\",\n  'slardar': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/slardar_full.png\",\n  'slark': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/slark_full.png\",\n  'snap': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/snapfire_full.png\",\n  'sniper': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/sniper_full.png\",\n  'spectre': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/spectre_full.png\",\n  'storm': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/storm_spirit_full.png\",\n  'sven': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/sven_full.png\",\n  'ta': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/templar_assassin_full.png\",\n  'tb': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/terrorblade_full.png\",\n  'tide': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/tidehunter_full.png\",\n  'timber': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/shredder_full.png\",\n  'tinker': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/tinker_full.png\",\n  'tiny': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/tiny_full.png\",\n  'troll': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/troll_warlord_full.png\",\n  'tusk': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/tusk_full.png\",\n  'underlord': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/abyssal_underlord_full.png\",\n  'undying': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/undying_full.png\",\n  'ursa': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/ursa_full.png\",\n  'viper': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/viper_full.png\",\n  'vs': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/void_spirit_full.png\",\n  'warlock': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/warlock_full.png\",\n  'weaver': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/weaver_full.png\",\n  'wd': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/witch_doctor_full.png\",\n  'willow': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/dark_willow_full.png\",\n  'wk': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/skeleton_king_full.png\",\n  'wr': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/windrunner_full.png\",\n  'ww': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/winter_wyvern_full.png\",\n  'zeus': \"https://steamcdn-a.akamaihd.net/apps/dota2/images/heroes/zuus_full.png\",\n}\n\nexport const nameLegend = {\n  'Bsu': \"BeeSu\",\n}\n\nexport const portraitLegend = {\n  'lisa': \"/dota-inhouse-stats/angus.png\",\n  'nanoir': \"/dota-inhouse-stats/dixon.png\",\n  'jeleto': \"/dota-inhouse-stats/saif.png\",\n  'nixnala': \"/dota-inhouse-stats/alan.png\",\n  'geese': \"/dota-inhouse-stats/holden.png\",\n  'coolgave': \"/dota-inhouse-stats/gavin.png\",\n  'pain peko': \"/dota-inhouse-stats/denzel.png\",\n  'justin': \"/dota-inhouse-stats/justin.png\",\n  'lester': \"/dota-inhouse-stats/lester.png\",\n  'monta': \"/dota-inhouse-stats/isaac.png\",\n  'dream': \"/dota-inhouse-stats/alex.png\",\n  'bsu': \"/dota-inhouse-stats/bronson.png\",\n  'chesticlez': \"/dota-inhouse-stats/cheston.png\",\n  'yoshioka': \"/dota-inhouse-stats/anthony.png\",\n  'remia': \"/dota-inhouse-stats/huy.png\",\n}","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\"\n\nimport { nameLegend, pictureLegend } from '../../util/legends';\n\nconst MatchDetails = ({ matchDetails }) => {\n  const radiantTeam = matchDetails.filter((_, index) => index % 2 === 0);\n  const direTeam = matchDetails.filter((_, index) => index % 2 === 1);\n\n  return (\n    <MatchContainer>\n      <TeamHeader style={{ padding: \"6px 0 \"}}>\n        <DetailText>Hero</DetailText>\n        <DetailText>Player</DetailText>\n        <DetailText>Kills</DetailText>\n        <DetailText>Deaths</DetailText>\n        <DetailText>Assists</DetailText>\n        <DetailText>Damage</DetailText>\n      </TeamHeader>\n      {radiantTeam?.map(({ username, hero, kills, deaths, assists, damage }) => (\n        <RadiantTeamContainer key={damage}>\n          <TeamHeader>\n            <img src={pictureLegend[hero]} height={32} style={{ margin: \"0 auto\"}} alt={`${nameLegend[hero]} icon`} />\n            <Link style={{ textAlign: \"center\", fontSize: \"0.8rem\", margin: \"auto 0\" }} to={`/user/${username}`}>{nameLegend[username] ? nameLegend[username] : username}</Link>\n            <DetailText>{kills}</DetailText>\n            <DetailText>{deaths}</DetailText>\n            <DetailText>{assists}</DetailText>\n            <DetailText>{damage}</DetailText>\n          </TeamHeader>\n        </RadiantTeamContainer>\n      ))}\n      {direTeam?.map(({ username, hero, kills, deaths, assists, damage }) => (\n        <DireTeamContainer key={damage}>\n          <TeamHeader>\n            <img src={pictureLegend[hero]} height={32} style={{ margin: \"0 auto\"}} alt={`${nameLegend[hero]} icon`}  />\n            <Link style={{ textAlign: \"center\", fontSize: \"0.8rem\", margin: \"auto 0\" }} to={`/user/${username}`}>{username}</Link>\n            <DetailText>{kills}</DetailText>\n            <DetailText>{deaths}</DetailText>\n            <DetailText>{assists}</DetailText>\n            <DetailText>{damage}</DetailText>\n          </TeamHeader>\n        </DireTeamContainer>\n      ))}\n    </MatchContainer>\n  )\n}\n\nexport default MatchDetails;\n\nconst MatchContainer = styled.div`\n  border: 1px solid black;\n`\n\nconst RadiantTeamContainer = styled.div`\n  background-color: rgb(0, 51, 0, 0.2);\n`\n\nconst TeamHeader = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;\n`\n\nconst DireTeamContainer = styled.div`\n  background-color: rgb(255, 105, 1, 0.2);\n`\n\nconst DetailText = styled.p`\n  font-size: 0.8rem;\n  margin: auto 0;\n  text-align: center;\n`","import { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport MatchDetails from \"../details\"\nimport { pictureLegend } from \"../../util/legends\";\n\nconst MatchOverview = ({ matchDetails }) => {\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const radiantTeam = matchDetails.filter((_, index) => index % 2 === 0);\n  const direTeam = matchDetails.filter((_, index) => index % 2 === 1);\n  \n  return (\n    <MatchOverviewContainer>\n      <InformationContainer onClick={() => setIsOpen(!isOpen)}>\n        <div style={{ margin: \"auto 0\", display: \"flex\", paddingLeft: \"15px\"}} >\n          {radiantTeam.map(({ hero }) => (\n            <div key={hero}>\n              <HeroIcon src={`${pictureLegend[hero]}`} alt={`${hero} icon`} />\n            </div>\n          ))}\n        </div>\n        <div style={{ margin: \"auto 0\", display: \"flex\" }} >\n          {direTeam.map(({ hero }) => (\n            <div key={hero}>\n              <HeroIcon src={`${pictureLegend[hero]}`} alt={`${hero} icon`} />\n            </div>\n          ))}\n        </div>\n        <DownArrow src=\"/dota-inhouse-stats/arrow-down.png\" isOpen={isOpen}/>\n      </InformationContainer>\n      {isOpen && \n        <MatchDetails \n          matchDetails={matchDetails}\n        />\n      }\n    </MatchOverviewContainer>\n  )\n}\n\nexport default MatchOverview;\n\nconst MatchOverviewContainer = styled.div`\n  margin: 0 auto;\n`\n\nconst InformationContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border: 1px solid #eaeae1;\n  padding: 5px 10px;\n  background-color: #fafbfc;\n\n  &:hover {\n    cursor:pointer;\n  }\n`\n\nconst HeroIcon = styled.img`\n  height: 32px;\n`\n\nconst DownArrow = styled.img`\n  width: 32px;\n  height: 32px;\n  transform: ${({ isOpen }) => isOpen ? \"rotate(180deg)\" : \"\"}\n`","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\"\n\nimport MatchOverview from \"../../components/overview\"\n\nconst bronsonTicks = [\n  \"Paper, Nala\",\n  \"Pussy wine\",\n  \"The dick slam\",\n  \"The gahlick\",\n  \"Fuggit homes\",\n  \"Baby swap?\",\n  \"Lickle ting\",\n  \"Pussy lips\",\n  \"Swear tho\",\n  \"Sheeeeeeeesh\",\n  \"I'll give you 2 options\",\n  \"Anyone but Huskar\",\n  \"Should've bought Safemoon when I told you guys\",\n  \"🥁 REMIA 🥁 REMIA 🥁\",\n  \"Not the sannin man\",\n]\n\nconst MainPage = ({ initialData, matchHistory, setMatchHistory, individualStats }) => {\n  const [ searchText, setSearchText ] = useState(\"\");\n  const [ bronsonQuote, setBronsonQuote ] = useState(\"\");\n\n  let history = useHistory();\n\n  useEffect(() => {\n    setBronsonQuote(bronsonTicks[Math.floor(Math.random() * bronsonTicks.length + 1)]);\n  }, [setMatchHistory])\n\n  useEffect(() => {\n    setMatchHistory(initialData);\n  }, [initialData, setMatchHistory])\n\n  const handleChange = e => {\n    setSearchText(e.target.value);\n    let filteredResult = [];\n    if (searchText.length > 1) {\n      for (const game of initialData) {\n        for (const user of game) {\n          if (user[\"username\"].toLowerCase().indexOf(searchText.toLowerCase()) > -1 ) {\n            filteredResult.push(game);\n          }\n        }\n      }\n      setMatchHistory(filteredResult)\n    } else {\n      setMatchHistory(initialData);\n    }\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (individualStats[searchText]) {\n      history.push(`/user/${searchText}`)\n    }\n  }\n\n  return (\n    <>  \n      <MainPageHeader>Inhouse Stats For Animals</MainPageHeader>\n      <MainContainer> \n        <MainPageSubheader>🗣️: {bronsonQuote}</MainPageSubheader>\n        <form onSubmit={handleSubmit}>\n          <SearchBar type=\"text\" value={searchText} onChange={handleChange} placeholder=\"Search by name..\"/>\n        </form>\n        {matchHistory?.map((game, index) => (\n          <MatchOverview \n            matchDetails={game}\n            index={index}\n            key={index}\n          />\n        ))}\n      </MainContainer>\n    </>\n  )\n}\n\nexport default MainPage;\n\nconst MainPageHeader = styled.h1`\n  background-color: #24292e;\n  text-align: center;\n  color: white;\n  padding: 50px;\n`\n\nconst MainPageSubheader = styled.h2`\n  margin: 50px auto;\n  text-align: center;\n  border: 1px solid #eaeae1;\n  padding: 50px;\n`\n\nconst SearchBar = styled.input`\n  width: 100%;\n  box-sizing: border-box;\n  padding: 0.5em 0 0.5em 40px;\n  margin-bottom: 30px;\n  background-image:url('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSwd9t9-J2wwy7hv6S_V95qXYCCN8cMpolIiOjQomirSZ1TtBjAqA');\n  background-repeat: no-repeat;\n  background-position: 9px 5px;\n  background-size: 20px 20px;\n`\n\nconst MainContainer = styled.div`\n  max-width: 700px;\n  margin: 0 auto;\n  background-color: \n`","import styled from \"styled-components\";\n\nimport { heroLegend, pictureLegend } from \"../../util/legends\";\n\nconst CustomTooltip = ({ active, payload }) => {\n  if (active && payload && payload.length) {\n    const { payload: { heroName } } = payload[0];\n    return (\n      <div>\n        <p>{heroLegend[heroName]}</p>\n        <HeroIcon src={`${pictureLegend[heroName]}`} alt={`${heroName} icon`} />\n      </div>\n    );\n  }\n  return null;\n}\n\nexport default CustomTooltip;\n\nconst HeroIcon = styled.img`\n  height: 48px;\n`","import { useEffect, useState } from \"react\"\nimport { Link, useParams } from \"react-router-dom\"; \nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport styled from \"styled-components\";\n\nimport CustomTooltip from \"../../components/custom-tooltip\";\nimport { heroLegend, nameLegend, pictureLegend, portraitLegend } from '../../util/legends';\n\nconst UserPage = ({ individualStats }) => {\n  const { id } = useParams();\n  const [sortedHeroData, setSortedHeroData] = useState();\n  const [sortedPeerData, setSortedPeerData] = useState()\n  const [sortCategory, setSortCategory] = useState(\"\")\n\n  useEffect(() => {\n    if (individualStats) {\n      const { heroesPlayed, peers } = individualStats[id];\n      const heroData = [];\n      const peerData = [];\n\n      for (const heroName in heroesPlayed) {\n        heroData.push({\n        heroName: heroName, \n          ...heroesPlayed[heroName]},\n        )\n      }\n\n      heroData.sort((a,b) => {\n        if (heroLegend[a.heroName] < heroLegend[b.heroName]) {\n          return -1;\n        } else if (heroLegend[a.heroName] > heroLegend[b.heroName]) {\n          return 1;\n        }\n        return 0;\n      })\n\n      for (const peerName in peers) {\n        peerData.push({\n          peerName: peerName.toLowerCase(),\n          ...peers[peerName.toLowerCase()]\n        })\n      }\n      peerData.sort((a,b) => {\n        if (a.played > b.played) {\n          return -1;\n        } else if (a.played < b.played) {\n          return 1;\n        }\n        return 0;\n      })\n\n      // console.log(peerData);\n      setSortedHeroData(heroData);\n      setSortedPeerData(peerData);\n    }\n  }, [id, individualStats])\n\n  const sortArray = (category, array) => {\n    const newArray = (array === \"hero\") ? [...sortedHeroData] : [...sortedPeerData];\n    // console.log(newArray);\n    if (category === \"gamesPlayed\") {\n      newArray.sort((a,b) => {\n        if (a.played < b.played) {\n          return sortCategory === category ? -1 : 1\n        } else if (a.played > b.played) {\n          return sortCategory === category ? 1 : -1\n        }\n        return 0\n      })\n    } else if (category === \"kda\") {\n      newArray.sort((a,b) => {\n        const aKillRate = (a.kills/a.played);\n        const aDeathsRate = (a.deaths/a.played);\n        const aAssistsRate = (a.assists/a.played);\n        const bKillRate = (b.kills/b.played);\n        const bDeathsRate = (b.deaths/b.played);\n        const bAssistsRate = (b.assists/b.played);\n        if ((aKillRate+aAssistsRate)/aDeathsRate < (bKillRate+bAssistsRate)/bDeathsRate) {\n          return sortCategory === category ? -1 : 1\n        } else if ((aKillRate+aAssistsRate)/aDeathsRate > (bKillRate+bAssistsRate)/bDeathsRate) {\n          return sortCategory === category ? 1 : -1\n        }\n        return 0\n      })\n    } else {\n      newArray.sort((a,b) => {\n        if (a[category]/a.played < b[category]/b.played) {\n          return sortCategory === category ? -1 : 1\n        } else if (a[category]/a.played > b[category]/b.played) {\n          return sortCategory === category ? 1 : -1\n        }\n        return 0\n      })\n    }\n    if (array === \"hero\") {\n      setSortedHeroData(newArray);\n    } else {\n      setSortedPeerData(newArray)\n    }\n    setSortCategory(category);\n  }\n\n  if (individualStats) {\n    const { kills, assists, deaths, damage, wins, losses } = individualStats[id];\n    const totalGames = wins + losses;\n\n    return (\n      <>\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n          <MainPageHeader>Inhouse Stats For Animals</MainPageHeader>\n        </Link>\n          <UserPageContainer>\n          <MainPageSubheader>User stats for: { nameLegend[id] ? nameLegend[id] : id }</MainPageSubheader>\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <PlayerPortrait src={portraitLegend[id]} />\n          </div>\n          <UserStatistics>\n            <div>\n              <UserInfoText>Winrate</UserInfoText>\n              <UserInfoText>{((wins/totalGames)*100).toFixed(2)}%</UserInfoText>\n            </div>\n            <div>\n              <UserInfoText>Games Played</UserInfoText>\n              <UserInfoText>{totalGames}</UserInfoText>\n            </div>\n            <div>\n              <UserInfoText>Kills</UserInfoText>\n              <UserInfoText>{(kills/totalGames).toFixed(2)}</UserInfoText>\n            </div>\n            <div>\n              <UserInfoText>Deaths</UserInfoText>\n              <UserInfoText>{(deaths/totalGames).toFixed(2)}</UserInfoText>\n            </div>\n            <div>\n              <UserInfoText>Assists</UserInfoText>\n              <UserInfoText>{(assists/totalGames).toFixed(2)}</UserInfoText>\n            </div>\n            <div>\n              <UserInfoText>Damage</UserInfoText>\n              <UserInfoText>{Math.floor(damage/totalGames)}</UserInfoText>\n            </div>\n          </UserStatistics>\n          <HeroStatistics>\n            <h3>Hero Statistics</h3>\n            <HeroHeader>\n              <UserInfoText onClick={() => sortArray('gamesPlayed', 'hero')}>Games Played</UserInfoText>\n              <UserInfoText onClick={() => sortArray('wins', 'hero')}>Winrate</UserInfoText>\n              <UserInfoText onClick={() => sortArray('kills', 'hero')}>Average Kills</UserInfoText>\n              <UserInfoText onClick={() => sortArray('deaths', 'hero')}>Average Deaths</UserInfoText>\n              <UserInfoText onClick={() => sortArray('assists', 'hero')}>Average Assists</UserInfoText>\n              <UserInfoText onClick={() => sortArray('kda', 'hero')}>KDA</UserInfoText>\n            </HeroHeader>\n            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n              {sortedHeroData?.map(({ heroName, played, wins, losses, kills, deaths, assists }) => {\n                const killRate = (kills/played);\n                const deathsRate = (deaths/played);\n                const assistsRate = (assists/played);\n                return(\n                  <HeroContainer key={heroName}>\n                    <div style={{ display: \"flex\" }}>\n                      <HeroIcon src={`${pictureLegend[heroName]}`} alt={`${heroName} icon`} />\n                      <HeroText>{heroLegend[heroName]}</HeroText>\n                    </div>\n                    <HeroText>{played}</HeroText>\n                    <HeroText>{((wins/played)*100).toFixed(2)}%</HeroText>\n                    <HeroText>{killRate.toFixed(2)}</HeroText>\n                    <HeroText>{deathsRate.toFixed(2)}</HeroText>\n                    <HeroText>{assistsRate.toFixed(2)}</HeroText>\n                    <HeroText>{((killRate + assistsRate)/deathsRate).toFixed(2)}</HeroText>\n                  </HeroContainer>\n                )\n              })}\n            </div>\n            <BarChart\n              width={750}\n              height={400}\n              data={sortedHeroData}\n              margin={{\n                top: 50,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"heroName\" tick={false} />\n              <YAxis />\n              <Tooltip content={<CustomTooltip />} />\n              <Legend />\n              <Bar dataKey=\"wins\" fill=\"#8884d8\" />\n              <Bar dataKey=\"played\" fill=\"#82ca9d\" />\n              {/* <Brush dataKey=\"played\" height={30} stroke=\"#8884d8\" /> */}\n            </BarChart>\n          </HeroStatistics>\n          <PeerStatistics>\n            <h3>Peer Statistics</h3>\n            <PeerHeader>\n              <PeerInfoText onClick={() => sortArray('gamesPlayed', 'peers')}>Games Played</PeerInfoText>\n              <PeerInfoText onClick={() => sortArray('wins', 'peers')}>Won With</PeerInfoText>\n              <PeerInfoText onClick={() => sortArray('kills', 'peers')}>Lost With</PeerInfoText>\n              <PeerInfoText onClick={() => sortArray('deaths', 'peers')}>Won Against</PeerInfoText>\n              <PeerInfoText onClick={() => sortArray('assists', 'peers')}>Lost Against</PeerInfoText>\n            </PeerHeader>\n            {sortedPeerData?.map(({ peerName, played, wonWith, lostWith, wonAgainst, lostAgainst }, index) => {\n              return (\n                <PeerContainer>\n                  <Link to={`/user/${peerName}`}>{peerName}</Link>\n                  <PeerText>{played}</PeerText>\n                  <PeerText>{wonWith}({!isNaN(wonWith/(wonWith + lostWith)) ? (wonWith/(wonWith + lostWith) * 100).toFixed(2) : 0 }%)</PeerText>\n                  <PeerText>{lostWith}({!isNaN(lostWith/(wonWith + lostWith)) ? (lostWith/(wonWith + lostWith) * 100).toFixed(2) : 0 }%)</PeerText>\n                  <PeerText>{wonAgainst}({!isNaN(wonAgainst/(wonAgainst + lostAgainst))? (wonAgainst/(wonAgainst + lostAgainst) * 100).toFixed(2) : 0 }%)</PeerText>\n                  <PeerText>{lostAgainst}({!isNaN(lostAgainst/(wonAgainst + lostAgainst)) ? (lostAgainst/(wonAgainst + lostAgainst) * 100).toFixed(2) : 0 }%)</PeerText>\n                </PeerContainer>\n              )\n            })}\n          </PeerStatistics>\n        </UserPageContainer>\n      </>\n    )\n  } return null\n}\n\nexport default UserPage;\n\nconst MainPageHeader = styled.h1`\n  background-color: #24292e;\n  text-align: center;\n  color: white;\n  padding: 50px;\n`\n\nconst UserPageContainer = styled.div`\n  max-width: 750px;\n  margin: 0 auto;\n  background-color: \n`\n\nconst MainPageSubheader = styled.h2`\n  text-align: center;\n  border: 1px solid #eaeae1;\n  padding: 50px;\n`\n\nconst PlayerPortrait = styled.img`\n  width: 30%;\n`\n\nconst UserStatistics = styled.div`\n  border: 1px solid #eaeae1;\n  display: flex;\n  justify-content: space-around;\n  margin-bottom: 24px;\n`\n\nconst HeroStatistics = styled.div`\n  border: 1px solid #eaeae1;\n  padding-bottom: 24px;\n  margin-bottom: 24px;\n  display: flex;\n  flex-direction: column;\n  & > h3 {\n    text-align: center;\n  }\n`\n\nconst PeerStatistics = styled.div`\n  border: 1px solid #eaeae1;\n  padding-bottom: 24px;\n  display: flex;\n  flex-direction: column;\n  & > h3 {\n    text-align: center;\n  }\n`\n\nconst HeroHeader = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr 1fr 1fr 1fr 1fr 1fr;\n  font-size: 0.6rem;\n  width: 90%;\n  margin: 0 auto;\n  text-align: center;\n  & > p:nth-child(1) {\n    grid-column-start: 2;\n  }\n`\n\nconst HeroContainer = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr 1fr 1fr 1fr 1fr 1fr;\n  margin: 0 auto;\n  width: 90%;\n`\n\nconst HeroText = styled.p`\n  margin: auto 0;\n  width: 100%;\n  font-size: 0.7rem;\n  padding-left: 4px;\n  text-align: center;\n`\n\nconst UserInfoText = styled.p`\n  text-align: center;\n`\n\nconst HeroIcon = styled.img`\n  height: 32px;\n`\n\nconst PeerContainer = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr 1fr 1fr 1fr 1fr;\n  margin: 0 auto;\n  width: 90%;\n`\n\nconst PeerHeader = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 1fr 1fr 1fr 1fr 1fr;\n  font-size: 0.6rem;\n  width: 90%;\n  margin: 0 auto;\n  text-align: center;\n  & > h3:nth-child(1) {\n    grid-column-start: 2;\n  }\n`\n\nconst PeerInfoText = styled.h3`\n  text-align: center;\n`\n\nconst PeerText = styled.p`\n  margin: auto 0;\n  width: 100%;\n  font-size: 0.7rem;\n  padding-left: 4px;\n  text-align: center;\n`","import { readString } from 'react-papaparse'\nimport { heroLegend } from './legends';\n\nconst readCSV = async () => {\n  const response = await fetch('https://raw.githubusercontent.com/lixuanle/dota-inhouse-stats/main/public/data/game-stats.csv');\n  const data = await response.text();\n  const { data: csvData } = readString(data);\n  if (csvData.length > 0) {\n\n    let listOfGames = [];\n    let gameToAdd = [];\n    let playerStats = {};\n    let heroPicks = {};\n    let sideWins = { radiant: 0, dire: 0 };\n    let counter = 0;\n\n    for (const row of csvData.slice(1)) {\n\n      if (row[1] !== \"Winner: \") {\n\n        // In hindsight I could probably destruct the array and make one of these variables for each item instead of doing row[i] all the time but future me can deal with that.\n        const radiantPlayer = row[1].toLowerCase();\n        const direPlayer = row[7].toLowerCase();\n\n        // 2 blocks of code to keep a history of each game, the players in it, the heroes played, and the stats.\n        gameToAdd.push({\n          username: radiantPlayer,\n          side: \"radiant\",\n          kills: row[2],\n          deaths: row[3],\n          assists: row[4],\n          hero: row[5],\n          damage: row[6],\n          winner: row[13].toLowerCase() === radiantPlayer ? true : false\n        });\n\n        gameToAdd.push({\n          username: direPlayer,\n          side: \"dire\",\n          kills: row[8],\n          deaths: row[9],\n          assists: row[10],\n          hero: row[11],\n          damage: row[12],\n          winner: row[13].toLowerCase() === direPlayer ? true : false\n        });\n\n        if (counter === 4) {\n\n        listOfGames.push(gameToAdd);\n        gameToAdd = [];\n          counter = -1;\n        }\n\n        counter+=1;\n\n        // Initialize a base object for the Radiant player if they don't already exist in the object.\n        if (!playerStats[radiantPlayer]) {\n          playerStats[radiantPlayer] = {\n            heroesPlayed: {},\n            peers: {},\n            kills: 0,\n            deaths: 0,\n            assists: 0,\n            damage: 0,\n            wins: 0,\n            losses: 0,\n          }\n        }\n\n        // Initialize a base object for the Dire player if they don't already exist in the object.\n        if (!playerStats[direPlayer]) {\n          playerStats[direPlayer] = {\n            heroesPlayed: {},\n            peers: {},\n            kills: 0,\n            deaths: 0,\n            assists: 0,\n            damage: 0,\n            wins: 0,\n            losses: 0,\n          }\n        }\n\n        // Block of code to check if the hero exists in that players object and adds it if it doesn't exist. If it exists, it updates accordingly.\n        // row[5] = Radiant hero played.\n        // row[11] = Dire hero played.\n        // row[13] = Winning player.\n        if (!playerStats[radiantPlayer].heroesPlayed[row[5]]) {\n          playerStats[radiantPlayer].heroesPlayed[row[5]] = {\n            played: 1,\n            wins: 0,\n            losses: 0,\n            kills: 0,\n            deaths: 0,\n            assists: 0,\n          }\n        } else {\n          playerStats[radiantPlayer].heroesPlayed[row[5]][\"played\"] += 1\n        }\n\n        playerStats[radiantPlayer].heroesPlayed[row[5]][\"kills\"] += parseInt(row[2]);\n        playerStats[radiantPlayer].heroesPlayed[row[5]][\"deaths\"] += parseInt(row[3]);\n        playerStats[radiantPlayer].heroesPlayed[row[5]][\"assists\"] += parseInt(row[4]);\n\n        if (row[13].toLowerCase() === radiantPlayer) {\n          playerStats[radiantPlayer].heroesPlayed[row[5]][\"wins\"] += 1;\n        } else {\n          playerStats[radiantPlayer].heroesPlayed[row[5]][\"losses\"] += 1;\n        }\n      \n        \n        // Same block as above but to track Dire side.\n        if (!playerStats[direPlayer].heroesPlayed[row[11]]) {\n          playerStats[direPlayer].heroesPlayed[row[11]] = {\n            played: 1,\n            wins: 0,\n            losses: 0,\n            kills: 0,\n            deaths: 0,\n            assists: 0,\n          }\n        } else {\n          playerStats[direPlayer].heroesPlayed[row[11]][\"played\"] += 1\n        }\n\n        playerStats[direPlayer].heroesPlayed[row[11]][\"kills\"] += parseInt(row[8]);\n        playerStats[direPlayer].heroesPlayed[row[11]][\"deaths\"] += parseInt(row[9]);\n        playerStats[direPlayer].heroesPlayed[row[11]][\"assists\"] += parseInt(row[10]);\n\n        if (row[13].toLowerCase() === direPlayer) {\n          playerStats[direPlayer].heroesPlayed[row[11]][\"wins\"] += 1;\n        } else {\n          playerStats[direPlayer].heroesPlayed[row[11]][\"losses\"] += 1;\n        }\n        \n        // Block of code to check if the hero exists in that total picks object and adds it if it doesn't exist. If it exists, it updates accordingly.\n        // row[5] = Radiant hero played.\n        // row[11] = Dire hero played.\n        // row[13] = Winning player.\n        if (!heroPicks[heroLegend[row[5]]]) {\n          heroPicks[heroLegend[row[5]]] = {\n            played: 1,\n            wins: 0,\n            losses: 0\n          }\n        } else {\n          heroPicks[heroLegend[row[5]]][\"played\"] += 1\n        }\n\n        if (row[13].toLowerCase() === radiantPlayer) {\n          heroPicks[heroLegend[row[5]]][\"wins\"] += 1;\n        } else {\n          heroPicks[heroLegend[row[5]]][\"losses\"] += 1;\n        }\n\n        // Same block of code as above but to keep track of Dire side.\n        if (!heroPicks[heroLegend[row[11]]]) {\n          heroPicks[heroLegend[row[11]]] = {\n            played: 1,\n            wins: 0,\n            losses: 0,\n          }\n        } else {\n          heroPicks[heroLegend[row[11]]][\"played\"] += 1;\n        }\n\n        if (row[13].toLowerCase() === direPlayer) {\n          heroPicks[heroLegend[row[11]]][\"wins\"] += 1;\n        } else {\n          heroPicks[heroLegend[row[11]]][\"losses\"] += 1;\n        }\n\n        // 2 blocks of code to update the running sum of all the corresponding stats per player.\n        playerStats[radiantPlayer].kills += parseInt(row[2]);\n        playerStats[radiantPlayer].deaths += parseInt(row[3]);\n        playerStats[radiantPlayer].assists += parseInt(row[4]);\n        playerStats[radiantPlayer].damage += parseInt(row[6]);\n        playerStats[radiantPlayer].wins += (row[13].toLowerCase() === radiantPlayer ? 1 : 0);\n        playerStats[radiantPlayer].losses += (row[13].toLowerCase() !== radiantPlayer ? 1 : 0);\n\n        playerStats[direPlayer].kills += parseInt(row[8]);\n        playerStats[direPlayer].deaths += parseInt(row[9]);\n        playerStats[direPlayer].assists += parseInt(row[10]);\n        playerStats[direPlayer].damage += parseInt(row[12]);\n        playerStats[direPlayer].wins += (row[13].toLowerCase() === direPlayer ? 1 : 0);\n        playerStats[direPlayer].losses += (row[13].toLowerCase() !== direPlayer ? 1 : 0);\n\n      } else {\n        // If the csv line is Winner: Dire/Radiant, this block will update the wins for that side.\n        if (row[2] === 'Dire') {\n          sideWins.dire += 1\n        } else {\n          sideWins.radiant += 1\n        }\n      }\n    }\n\n    // This probably does not scale at ALL, but for what we have now its that bad.\n    // The ideal case here is that we switch to the league API, but on the other hand we probably will never get more than 1000 games and even then performance wouldn't tank. Probably.\n    for (const game of listOfGames) {\n      // Cross references the player with the other players in the match, and checks to see who won that match.\n      for (const player of game) {\n        const { username, side, winner } = player;\n        for (const otherPlayer of game) {\n          const { username: otherUsername, side: otherSide } = otherPlayer;\n          if (username !== otherUsername) {\n            if (!playerStats[username].peers[otherUsername]) {\n              playerStats[username].peers[otherUsername] = {\n                played: 1,\n                wonWith: 0,\n                lostWith: 0,\n                wonAgainst: 0,\n                lostAgainst: 0,\n              }\n            } else {\n              playerStats[username].peers[otherUsername].played += 1;\n            }\n            if (side === otherSide && winner) {\n              playerStats[username].peers[otherUsername].wonWith += 1;\n            } else if (side === otherSide && !winner) {\n              playerStats[username].peers[otherUsername].lostWith += 1;\n            } else if (side !== otherSide && winner) {\n              playerStats[username].peers[otherUsername].wonAgainst += 1;\n            } else {\n              playerStats[username].peers[otherUsername].lostAgainst += 1;\n            }\n          }\n        }\n      }\n    }\n\n    return { listOfGames, playerStats, heroPicks, sideWins };\n  }\n}\n\nexport default readCSV;","import { useEffect, useState } from \"react\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport MainPage from \"./pages/main-page\";\nimport UserPage from \"./pages/user\";\nimport readCSV from \"./util/parser\"\n\nconst App = () => {\n\n  const [ initialData, setInitialData ] = useState([]);\n  const [ matchHistory, setMatchHistory ] = useState([]);\n  const [ individualStats, setIndividualStats ] = useState()\n  const [ , setHeroData ] = useState();\n  // const [ winData, setWinData ] = useState()\n\n  useEffect(() => {\n    const getCSV = async () => {\n      const { listOfGames, playerStats, heroPicks } = await readCSV();\n      console.log(listOfGames)\n      setMatchHistory([...listOfGames].reverse());\n      setInitialData([...listOfGames].reverse());\n      setIndividualStats(playerStats);\n      setHeroData(heroPicks);\n      // setWinData(sideWins);\n    }\n    getCSV();\n  }, [])\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\">\n          <MainPage \n            matchHistory={matchHistory}\n            initialData={initialData}\n            setMatchHistory={setMatchHistory}\n            individualStats={individualStats}\n          />\n        </Route>\n        <Route exact path={`/user/:id`}>\n          <UserPage \n            individualStats={individualStats}\n            initialData={initialData}\n          />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}